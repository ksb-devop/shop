/* eslint-disable jsx-a11y/alt-text */
import Head from 'next/head'

import styles from '../../styles/Home.module.css'
import { useRouter } from 'next/router'
import NavBar from '../../componenets/NavBar.tsx'

import {
    Box,
    chakra,
    Container,
    Stack,
    Text,
    Image,
    Flex,
    VStack,
    Button,
    Heading,
    SimpleGrid,
    StackDivider,
    useColorModeValue,
    VisuallyHidden,
    List,
    ListItem,
    Breadcrumb,
    BreadcrumbItem,
    BreadcrumbLink,
    BreadcrumbSeparator, 
  } from '@chakra-ui/react';

import { getProductDetails, getProducts } from '../../services/index'
import SideCategories from '../../componenets/SideCategories'
import ProductWidget from '../../componenets/ProductWidget';



export default function ProductPage({product, products}) {

    
  const router = useRouter();

  return (
    <div >
      <Head>
        <title>Shop || Kaffee-Service Berlin Peter Ganss GmbH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
       
       <SideCategories/>
        
        <Container
        boxShadow={'dark-lg'}
        my={'90px'}
        maxW={{ base: '90%', sm: '70%', lg: '70%' }}
        alignSelf={'center'}
        >
      <SimpleGrid
        columns={{ base: 1, lg: 2 }}
        spacing={{ base: 8, md: 10 }}
        py={{ base: 18, md: 24 }}>
        <Flex flexDirection={'column'}  >

        <Breadcrumb 
        pl={10}
        pb={10}
        fontWeight='medium' fontSize='sm'>
        <BreadcrumbItem>
        <BreadcrumbLink href='/shop'>Shop</BreadcrumbLink>
        </BreadcrumbItem>

       <BreadcrumbItem>
       <BreadcrumbLink href={`/category/${product.category.slug}`}> {product.category.name} </BreadcrumbLink>
       </BreadcrumbItem>


      <BreadcrumbItem isCurrentPage>
      <BreadcrumbLink href='#'>{product.title}</BreadcrumbLink>
      </BreadcrumbItem>
      </Breadcrumb>

          <Image
            rounded={'md'}
            alt={'product image'}
            src={product.image.url}
            fit={'contain'}
            align={'center'}
            w={'100%'}
            h={{ base: '100%', sm: '400px', lg: '500px' }}
          />
        </Flex>
        <Stack 
        ml={{ base: 4, sm: -10 }}
        w={'80%'} spacing={{ base: 6, md: 15 }}>
          <Box as={'header'}>
            <Heading
              lineHeight={1.1}
              fontWeight={600}
              fontSize={{ base: '2xl', sm: '4xl', lg: '5xl' }}>
              {product.title}
            </Heading>
            <Text
              color={useColorModeValue('gray.900', 'gray.400')}
              fontWeight={300}
              fontSize={'2xl'}>
              {product.category.name}
            </Text>
          </Box>

          <Stack
            spacing={{ base: 4, sm: 6 }}
            direction={'column'}
            divider={
              <StackDivider
                borderColor={useColorModeValue('gray.200', 'gray.600')}
              />
            }>
            <VStack spacing={{ base: 4, sm: 6 }}>
              <Text
                color={useColorModeValue('gray.900', 'gray.400')}
                fontSize={{ base: 'lg', sm: '2xl' }}
                
                fontWeight={'300'}>
                {product.excerpt}
              </Text>
               
            </VStack>
            
            <Box>
              <Text
                fontSize={{ base: '16px', lg: '18px' }}
                color={useColorModeValue('yellow.500', 'yellow.300')}
                fontWeight={'500'}
                textTransform={'uppercase'}
                mb={'4'}>
                EINZELHEITEN ZUM PRODUKT
              </Text>

              <List spacing={2}>
                <ListItem>
                  <Text as={'span'} fontWeight={'bold'}>
                  Geschmack:
                  </Text>{' '}
                  {product.taste}
                </ListItem>
                <ListItem>
                  <Text as={'span'} fontWeight={'bold'}>
                  Sorte:
                  </Text>{' '}
                  {product.type}
                </ListItem>
                <ListItem>
                  <Text as={'span'} fontWeight={'bold'}>
                  Beschaffenheit :
                  </Text>{' '}
                  {product.texture}
                </ListItem>
                <ListItem>
                  <Text as={'span'} fontWeight={'bold'}>
                  Verpackungsinhalt :
                  </Text>{' '}
                  {product.size}
                </ListItem>
                 
                 
              </List>
            </Box>
          </Stack>

          
        </Stack>
      </SimpleGrid>

    <Box 
      display={'flex'}
      flexDirection={'row'}
      flexWrap={'wrap'}
      gap={10}
      my={10}
      mx={8}
    >

{product.category.product.map((product) => (
  <>
         <Box 
         key={product.slug}
        role={'group'}
        display={'flex'}
        flexDirection={'column'}
        alignItems='center' 
        boxShadow={'lg'}
        borderRadius={10}
        py={4}
        _hover={{ 
          bg: 'gray.100',
          
        }} 
         >
         <Image
            rounded={'lg'}
            height={230}
            width={300}
            objectFit={'contain'}
            src={product.image.url}
          />
        <Text >{product.title}</Text>
        <Button 
          onClick={async () => { 
            router.push(`/product/${product.slug}`);
  
            }}
          colorScheme='blue'>Mehr-Info</Button>
        </Box>
        </>
        ))}
 
    </Box>

    </Container>
      </main>

   
    </div>
  )
}


// Fetch data at build time
export async function getStaticProps({ params }) {
    const data = await getProductDetails(params.slug);
  
    return {
      props: { product: data },
    };
  }

  export async function getStaticPaths() {
    const products = await getProducts();
    return {
      paths: products.map(({ node: { slug } }) => ({ params: { slug } })),
      fallback: false,
    };
  }  

 