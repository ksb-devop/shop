import Head from 'next/head'

import styles from '../../styles/Home.module.css'

import NavBar from '../../componenets/NavBar.tsx'
import { Heading, Text, Box, Image, Link, Button,  Center,
    useColorModeValue,
    Stack,
    Grid, } from '@chakra-ui/react'
import ProductCard from '../../componenets/ProductWidget'
import { getCategoryName, getCategoryProduct } from '../../services/index'
import SideCategories from '../../componenets/SideCategories'
import Categories from '../../componenets/Categories'
import { useRouter } from 'next/router'



export default function CategoryP({products, categories}) {


  const router = useRouter();
     
  return (
    <div >
      <Head>
        <title>Shop || Kaffee-Service Berlin Peter Ganss GmbH</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          
        <SideCategories  />
        <Grid
        templateColumns={{ base: 'repeat(1, 1fr)', md: 'repeat(2, 1fr)', lg: 'repeat(2, 1fr)' }} gap={4} w={'90%'} 
        >
          <Categories/> 
          <Box 
          boxShadow={'dark-lg'}
          borderRadius={10}
          p={12}
          pl={{ base: 12, md: 115 }}
          mx={{ base: 0, md: '-50%' }}
          w={{ base: '100%', md: '-150%' }}
          my={'20'}
          >

        {products.slice(0,1).map((products) => (
        <h1 className={styles.shopTitle} key={products.node.category.slug} >{products.node.category.name}</h1>

        ))}

       
        
        <div  className={styles.productgrid} >
          {products.map((products) => (
            
           

        <Center 
        key={products.node.slug}
        py={12}   >
      <Box
       
       
        role={'group'}
        p={2}
        maxW={'420px'} 
        mt={-16}
        py={10}
        w={'full'} 
        // eslint-disable-next-line react-hooks/rules-of-hooks
        bg={useColorModeValue('white', 'gray.800')}
        boxShadow={'dark-lg'}
        rounded={'lg'}
        pos={'relative'}
        zIndex={1}>

       

        <Box
          rounded={'lg'} 
          pos={'relative'}
          height={'full'}
          _after={{
            transition: 'all .3s ease',
            content: '""',
            w: 'full',
            h: 'full',
            pos: 'absolute',
            top: 3,
            left: 0,
            backgroundImage: `url(${products.node.image.url})`,
            filter: 'blur(15px)',
            zIndex: -1,
          }}
          _groupHover={{
            _after: {
              filter: 'blur(20px)',
            },
          }}>
          <Image
            rounded={'lg'}
            height={230}
            width={300}
            objectFit={'contain'}
            src={products.node.image.url}
          />
        </Box>
 
        <Stack pt={4} align={'center'}>
          
          <Heading fontSize={'2xl'} fontFamily={'body'} fontWeight={500}>
          {products.node.title}
          </Heading>
          
           
          <Button 
          onClick={async () => { 
            router.push(`/product/${products.node.slug}`);
  
            }}
          colorScheme='blue'>Mehr-Info</Button>
        </Stack>
      </Box>
       
    </Center>
            
          ))}
        </div>
        
        </Box>
         


        </Grid>
    
      </main>
 
    </div>
  )
}


// Fetch data at build time
export async function getStaticProps({ params }) {
    const products = await getCategoryProduct(params.slug);
  
    return {
      props: { products },
    };
  }

  export async function getStaticPaths() {
    const categories = await getCategoryName();
    return {
      paths: categories.map(({ slug }) => ({ params: { slug } })),
      fallback: false,
    };
  }  

 